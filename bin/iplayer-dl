#!/usr/bin/env ruby

# Download iPlayer programmes by spoofing an iPhone
# Paul Battley - http://po-ru.com/
#
# Get the latest version via subversion:
# svn co http://paulbattley.googlecode.com/svn/iplayer-dl

require 'iplayer'

include IPlayer
include IPlayer::Errors

# Most people will prefer the non-sign-language version
TYPE_PREFERENCE = %w[Original Signed]

pid = ARGV[0]
if pid =~ %r!/item/([a-z0-9]{8})!
  pid = $1
end

unless pid
  puts "Download DRM-free videos from the BBC iPlayer, courtesy of their iPhone interface."
  puts
  puts "Usage: #{$0} identifier"
  puts "Where identifier is the iPlayer viewing page or the PID of the programme."
  exit 1
end

if http_proxy = ENV['http_proxy']
  proxy_url = URI.parse(http_proxy)
  http = Net::HTTP::Proxy(proxy_url.host, proxy_url.port)
else
  http = Net::HTTP
end
browser = Browser.new(http)
downloader = Downloader.new(browser, pid)

begin
  available_versions = downloader.available_versions
  raise MP4Unavailable if available_versions.empty?
  version = available_versions.sort_by{ |v| 
    TYPE_PREFERENCE.index(v.name) || 100 
  }.first
  title = Metadata.new(pid, browser).full_title
  filename = "#{ title }.mov".gsub(/[^a-z0-9 \-\.]+/i, '')

  old_percentage = nil
  if File.exist?(filename)
    offset = File.size(filename)
    $stderr.puts "Resuming download at #{offset} bytes."
  else
    offset = 0
  end

  File.open(filename, 'a+b') do |io|
    downloader.download(version.pid, io, offset) do |position, max|
      percentage = "%.1f" % [((1000 * position) / max) / 10.0]
      if percentage != old_percentage
        old_percentage = percentage
        $stderr.print "\r#{ percentage }% #{ filename } (#{ version.name })"
        $stderr.flush
      end
    end
  end
  $stderr.puts

rescue ParsingError    
  $stderr.puts(
    "Unable to parse the programme page. Possible reasons:",
    "1. The iPlayer has changed", 
    "2. You are outside the UK (and not using a UK proxy)."
  )
  exit 1
rescue FileUnavailable
  $stderr.puts(
    "An MP4 URL was found, but the download failed."
  )
  exit 1
rescue MP4Unavailable
  $stderr.puts(
    "This programme is not currently available in an MP4 version."
  )
  exit 1
end
